name: Main
on: workflow_dispatch
jobs:
  build-project:
      strategy:
        matrix:
          os: [windows-latest]
          architecture: ['x64', 'x86']
      runs-on: ${{ matrix.os }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: 3.x
            architecture: ${{ matrix.architecture }}

        - name: Install PyInstaller
          run: |
            pip install pyinstaller
        - name: Build executable
          run: |
            pyinstaller main.py --onefile -w
            
        - name: Archive output content
          uses: thedoctor0/zip-release@master
          with:
            filename: output.zip
            directory: dist/
            
        - uses: actions/upload-artifact@v3
          with:
            name: ${{ matrix.os }}-${{ matrix.architecture }}
            path: dist/*.zip
            
  distribute-project:
    name: Distribute project to GitHub Releases
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - uses: actions/download-artifact@v3
      
      - name: Create GitHub release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          
      - name: Upload ubuntu asset to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./ubuntu-latest/output.zip
          asset_name: ubuntu-v${{ github.run_number }}.zip
          asset_content_type: application/zip
          
      - name: Upload Windows asset to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./windows-latest/output.zip
          asset_name: windows-v${{ github.run_number }}.zip
          asset_content_type: application/zip
          
      - name: Upload Mac asset to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./macos-latest/output.zip
          asset_name: macos-v${{ github.run_number }}.zip
          asset_content_type: application/zip
